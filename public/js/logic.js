// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    var Locations, Movies, geocoder, models, views;
    views = window.views;
    models = window.models;
    String.prototype.sanitize = function() {
      return this.replace(/"/g, "").replace(/'/g, "");
    };
    window.models.Location = Backbone.Model.extend({
      url: function() {
        return "/locations/" + this.get("_id");
      },
      idAttribute: '_id',
      initialize: function() {
        var loc, value;
        this.movies = new Movies;
        loc = this.toJSON();
        this.value = value = loc.title;
        return this.tokens = [this.get("_id"), value];
      }
    });
    Locations = Backbone.Collection.extend({
      url: "/locations/",
      model: models.Location
    });
    window.models.Movie = Backbone.Model.extend({
      url: function() {
        return "/movies/" + this.get("_id");
      },
      idAttribute: '_id',
      initialize: function() {
        var movie;
        movie = this.toJSON();
        this.value = movie.title;
        return this.tokens = [movie._id, movie.director, movie.producer, movie.writer, movie.title, movie.actor_1, movie.actor_2, movie.actor_3];
      }
    });
    Movies = Backbone.Collection.extend({
      url: '/movies/',
      model: models.Movie
    });
    window.views.LocationMarker = Backbone.View.extend({
      initialize: function() {
        var self;
        _.bindAll(this, "render");
        this.mapObj = this.options.mapObj;
        self = this;
        return this.listenTo(this.model, {
          "hide": function() {
            if (self.marker != null) {
              return self.marker.setMap(null);
            }
          },
          "zoomto": function() {
            var map;
            if (self.marker != null) {
              map = self.mapObj.map;
              map.panTo(self.marker.position);
              self.marker.setIcon(blueIcon);
              return self.marker.setMap(self.mapObj.map);
            }
          },
          "click": function() {
            if (self.marker != null) {
              return google.maps.event.trigger(self.marker, 'click');
            }
          },
          "select": function() {
            if (self.marker != null) {
              self.marker.setMap(window.map.map);
              return self.marker.setIcon(blueIcon);
            }
          }
        });
      },
      render: function() {
        var marker, pt;
        pt = new google.maps.LatLng(this.model.get("lat"), this.model.get("lng"));
        this.marker = marker = new google.maps.Marker({
          position: pt,
          animation: google.maps.Animation.DROP,
          title: this.model.get("title"),
          icon: redIcon
        });
        this.model.marker = marker;
        return this;
      }
    });
    window.views.FullMovieOrLocation = Backbone.View.extend({
      el: '.location-data',
      loctemplate: $("#full-view-location").html(),
      movtemplate: $("#full-view-movie").html(),
      favtemplate: $("#faves-template").html(),
      render: function(template, obj) {
        var content;
        content = $("<div/>").html(_.template(this[template], obj));
        this.$el.html(content);
        return this;
      }
    });
    window.FullViewer = new views.FullMovieOrLocation;
    window.movies = new Movies(window.movies);
    window.locations = new Locations(window.locations);
    window.map = new views.MovieMap;
    window.map.collection = locations;
    window.map.render();
    return geocoder = new google.maps.Geocoder();
  });

}).call(this);
