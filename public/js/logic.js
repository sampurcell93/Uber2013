// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    var Location, Locations, Movie, Movies, cc, movies;
    cc = function() {
      return _.each(arguments, function(arg) {
        return console.log(arg);
      });
    };
    Location = Backbone.Model.extend({
      url: "/locations"
    });
    Locations = Backbone.Collection.extend({
      model: Location
    });
    Movie = Backbone.Model.extend({
      url: "/locations",
      defaults: function() {
        return {
          locations: "Sorry, we don't have a location on record for this movie."
        };
      },
      parse: function(response) {
        var locs;
        locs = new Locations;
        _.each(response.coords, function(coord) {
          return locs.add(new Location(coord));
        });
        response["coords"] = locs;
        return response;
      }
    });
    Movies = Backbone.Collection.extend({
      url: '/movies/',
      model: Movie,
      initialize: function() {
        return this.markers = [];
      }
    });
    window.MovieMarker = Backbone.View.extend({
      template: $("#movie-marker-template").html(),
      initialize: function() {
        return _.bindAll(this, "render");
      },
      render: function() {
        var marker, pt;
        pt = new google.maps.LatLng(this.model.get("lat"), this.model.get("lng"));
        this.marker = marker = new google.maps.Marker({
          position: pt,
          animation: google.maps.Animation.DROP,
          title: this.model.get("title")
        });
        return this.model.marker = marker;
      }
    });
    movies = new Movies;
    return movies.fetch({
      success: function(coll) {
        return window.map = new MovieMap({
          collection: coll
        });
      }
    });
  });

}).call(this);
