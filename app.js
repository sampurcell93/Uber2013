// Generated by CoffeeScript 1.6.3
(function() {
  var MONGO_URI, app, cc, db, express, port, _;

  _ = require('underscore');

  express = require('express');

  app = express();

  port = process.env.PORT || 6060;

  app.listen(port, function() {
    return console.log("now listening on port " + port);
  });

  MONGO_URI = process.env.MONGOLAB_URI || process.env.MONGOHQ_URL || "Uber2013";

  db = require("mongojs").connect(MONGO_URI, ['locations']);

  cc = function() {
    return _.each(arguments, function(arg) {
      return console.log(arg);
    });
  };

  app.configure(function() {
    app.use(express.logger("dev"));
    app.set("views", __dirname + "/views");
    app.set("view engine", "jade");
    app.use(express.errorHandler());
    app.locals.pretty = true;
    app.use(express.cookieParser());
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    return app.use(express["static"](__dirname + "/public"));
  });

  app.get("/", function(req, res) {
    return db.locations.find({}, function(err, found) {
      var hashtable;
      hashtable = {};
      _.each(found, function(location) {
        return hashtable[location.address] = location.loc;
      });
      return res.render("index", {
        locations: JSON.stringify(hashtable)
      });
    });
  });

  app.post("/locations/:address/:lat/:lng", function(req, res) {
    var address, lat, lng;
    address = req.params.address;
    lat = req.params.lat;
    lng = req.params.lng;
    if ((lat == null) || (lng == null) || (address == null)) {
      return res.json({
        success: false
      });
    } else {
      return db.locations.update({
        address: address
      }, {
        $set: {
          address: address,
          loc: {
            lat: lat,
            lng: lng
          }
        }
      }, {
        upsert: true
      }, function(err, upd) {
        if (err) {
          return res.json({
            success: false
          });
        } else {
          return res.json({
            success: true
          });
        }
      });
    }
  });

  app.use(function(req, res) {
    return res.render("404");
  });

}).call(this);
